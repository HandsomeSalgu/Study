<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kh.springboot.member.model.mapper.MemberMapper">
	<!-- 비밀번호 암호화 전 로그인 쿼리 -->
<!-- 	<select id="login" resultType="Member"> -->
<!-- 		select * -->
<!-- 		from member -->
<!-- 		where id = #{id} and pwd = #{pwd} and member_status ='Y' -->
<!-- 	</select> -->

	<!-- 비밀번호 암호화 후 로그인 쿼리 -->
	<select id="login" resultType="Member">
		select *
		from member
		where id = #{id} and member_status ='Y'
	</select>

	<insert id="insertMember">
		insert into member
		values(#{id}, #{pwd}, #{name}, #{nickName}, 
			   #{email}, #{gender}, #{age}, #{phone},
			   #{address}, sysdate, sysdate, default, default, null)
	</insert>
	
	<select id="selectMyList" resultType="map">
		<!-- < 얘 자체는 부등호 표시가 아닌 태그 시작 표시여서 CDATA로 감싸준다 -->
		<![CDATA[
		select id_type, board_title, modify_date, count_content
		from(select board_id id_type, board_title, board_modify_date modify_date, to_char(board_count) count_content
		      from board
		      where board_writer = #{id} and board_status = 'Y'
		      order by board_id desc)
		where rownum <= 5
		union
		select *
		from(select board_type-3, board_title, reply_modify_date, reply_content 
		     from reply
		          join board on(REF_BOARD_ID = BOARD_ID)
		     where REPLY_WRITER = #{id} and reply_status = 'Y'
		     order by reply_id desc)
		where rownum <= 5
		order by id_type desc
		]]>
	</select>
	
	<update id="updateMember">
		update member
		set name=#{name}, nickname =#{nickName}, email=#{email}, gender=#{gender}, age=#{age}, phone=#{phone}, address=#{address}, UPDATE_DATE=sysdate
		where id=#{id} and MEMBER_STATUS='Y'
	</update>
	
	<update id="updatePwd">
		update member
		set pwd= #{pwd}
		where id= #{id}
	</update>
	
	<update id="deleteUser">
		update member
		set MEMBER_STATUS = 'N'
		where id=#{id}
	</update>
	
	<select id="checkValue" resultType="_int">
		select count(*)
		from member
		where ${column} = #{value}
	</select>
	
	<update id="updateProfile">
		update member
		set profile = #{profile}
		where id = #{id}
	</update>
	
	<select id="selectTodoList">
		select *
		from todo_list
		where writer= #{id}
		order by todo_num
	</select>
	
	<insert id="insertTodo">
		insert into todo_list
		values(seq_lid.nextval, #{todo}, #{writer}, default, default)
	</insert>
	
	<update id="updateTodo">
		update todo_list
		<if test='important == null'>
		set status = #{status}
		</if>
		<if test='important != null'>
		set important = #{important}
		</if>
		where todo_num = #{todoNum}
	</update>
	
	<delete id="ldelete">
		delete from todo_list
		where todo_num = #{todoNum}
	</delete>
	
	<select id="selectMembers">
		select *
		from member
	</select>
	
	<update id="updateMemberItem">
		update member
		set ${column} = #{value}
		where id= #{id}
	</update>
</mapper>
	